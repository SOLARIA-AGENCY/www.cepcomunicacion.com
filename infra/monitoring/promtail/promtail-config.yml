# Promtail Configuration for CEPComunicacion v2
# Log collection and forwarding to Loki

server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    batchwait: 1s
    batchsize: 1048576
    timeout: 10s

scrape_configs:
  # Docker containers logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/cepcomunicacion_(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      - source_labels: ['__meta_docker_container_label_com_cepcomunicacion_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_cepcomunicacion_component']
        target_label: 'component'
    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            error: error
      # Extract log level
      - labels:
          level:
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      # Extract error info
      - output:
          source: message

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      # Parse nginx access log format
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>[^ ]*) \[(?P<timestamp>[^\]]*)\] "(?P<method>[^ ]*) (?P<request_uri>[^ ]*) (?P<protocol>[^"]*)" (?P<status>\d+) (?P<bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - labels:
          method:
          status:
      - timestamp:
          source: timestamp
          format: '02/Jan/2006:15:04:05 -0700'

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'

  # PostgreSQL logs (if available)
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          __path__: /var/lib/docker/volumes/cepcomunicacion_postgres_data/_data/log/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+): (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'

  # Next.js application logs
  - job_name: nextjs
    static_configs:
      - targets:
          - localhost
        labels:
          job: nextjs
          app: web
          __path__: /var/lib/docker/volumes/cepcomunicacion_logs/_data/nextjs/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: msg
            context: context
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Payload CMS logs
  - job_name: payload
    static_configs:
      - targets:
          - localhost
        labels:
          job: payload
          app: cms
          __path__: /var/lib/docker/volumes/cepcomunicacion_logs/_data/payload/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: time
            message: msg
            request_id: req_id
      - labels:
          level:
          request_id:
      - timestamp:
          source: timestamp
          format: RFC3339

  # BullMQ worker logs
  - job_name: bullmq
    static_configs:
      - targets:
          - localhost
        labels:
          job: bullmq
          app: workers
          __path__: /var/lib/docker/volumes/cepcomunicacion_logs/_data/workers/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            job_id: jobId
            queue: queue
            message: message
      - labels:
          level:
          queue:
      - timestamp:
          source: timestamp
          format: RFC3339

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<application>\w+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - labels:
          application:
      - timestamp:
          source: timestamp
          format: 'Jan _2 15:04:05'
          location: 'Local'
