# Custom PostgreSQL queries for Prometheus exporter
# Provides additional database metrics for CEPComunicacion v2

# Query execution statistics per database
pg_stat_statements:
  query: |
    SELECT
      datname,
      queryid,
      calls,
      total_exec_time,
      mean_exec_time,
      max_exec_time,
      rows
    FROM pg_stat_statements
    JOIN pg_database ON pg_stat_statements.dbid = pg_database.oid
    WHERE datname = 'cepcomunicacion'
    LIMIT 100
  master: true
  metrics:
    - datname:
        usage: "LABEL"
        description: "Database name"
    - queryid:
        usage: "LABEL"
        description: "Query ID"
    - calls:
        usage: "COUNTER"
        description: "Number of times executed"
    - total_exec_time:
        usage: "COUNTER"
        description: "Total execution time in milliseconds"
    - mean_exec_time:
        usage: "GAUGE"
        description: "Mean execution time in milliseconds"
    - max_exec_time:
        usage: "GAUGE"
        description: "Maximum execution time in milliseconds"
    - rows:
        usage: "COUNTER"
        description: "Total number of rows retrieved or affected"

# Table sizes
pg_table_size:
  query: |
    SELECT
      schemaname,
      tablename,
      pg_total_relation_size(schemaname||'.'||tablename) AS total_bytes,
      pg_relation_size(schemaname||'.'||tablename) AS table_bytes,
      pg_indexes_size(schemaname||'.'||tablename) AS index_bytes
    FROM pg_tables
    WHERE schemaname = 'public'
  master: true
  metrics:
    - schemaname:
        usage: "LABEL"
        description: "Schema name"
    - tablename:
        usage: "LABEL"
        description: "Table name"
    - total_bytes:
        usage: "GAUGE"
        description: "Total size in bytes (table + indexes)"
    - table_bytes:
        usage: "GAUGE"
        description: "Table size in bytes"
    - index_bytes:
        usage: "GAUGE"
        description: "Index size in bytes"

# Index usage statistics
pg_index_usage:
  query: |
    SELECT
      schemaname,
      tablename,
      indexname,
      idx_scan,
      idx_tup_read,
      idx_tup_fetch
    FROM pg_stat_user_indexes
    WHERE schemaname = 'public'
  master: true
  metrics:
    - schemaname:
        usage: "LABEL"
        description: "Schema name"
    - tablename:
        usage: "LABEL"
        description: "Table name"
    - indexname:
        usage: "LABEL"
        description: "Index name"
    - idx_scan:
        usage: "COUNTER"
        description: "Number of index scans"
    - idx_tup_read:
        usage: "COUNTER"
        description: "Number of index entries returned"
    - idx_tup_fetch:
        usage: "COUNTER"
        description: "Number of live table rows fetched"

# Connection pool statistics
pg_connection_pool:
  query: |
    SELECT
      datname,
      usename,
      state,
      COUNT(*) AS connections
    FROM pg_stat_activity
    WHERE datname = 'cepcomunicacion'
    GROUP BY datname, usename, state
  master: true
  metrics:
    - datname:
        usage: "LABEL"
        description: "Database name"
    - usename:
        usage: "LABEL"
        description: "User name"
    - state:
        usage: "LABEL"
        description: "Connection state"
    - connections:
        usage: "GAUGE"
        description: "Number of connections"

# Long-running queries
pg_long_running_queries:
  query: |
    SELECT
      datname,
      usename,
      state,
      EXTRACT(EPOCH FROM (NOW() - query_start)) AS query_duration_seconds,
      COALESCE(wait_event_type, 'CPU') AS wait_event_type
    FROM pg_stat_activity
    WHERE datname = 'cepcomunicacion'
      AND state != 'idle'
      AND query_start IS NOT NULL
  master: true
  metrics:
    - datname:
        usage: "LABEL"
        description: "Database name"
    - usename:
        usage: "LABEL"
        description: "User name"
    - state:
        usage: "LABEL"
        description: "Query state"
    - wait_event_type:
        usage: "LABEL"
        description: "Wait event type"
    - query_duration_seconds:
        usage: "GAUGE"
        description: "Query duration in seconds"

# Cache hit ratio
pg_cache_hit_ratio:
  query: |
    SELECT
      datname,
      blks_hit,
      blks_read,
      CASE
        WHEN (blks_hit + blks_read) = 0 THEN 0
        ELSE (blks_hit::FLOAT / (blks_hit + blks_read))
      END AS cache_hit_ratio
    FROM pg_stat_database
    WHERE datname = 'cepcomunicacion'
  master: true
  metrics:
    - datname:
        usage: "LABEL"
        description: "Database name"
    - blks_hit:
        usage: "COUNTER"
        description: "Number of cache hits"
    - blks_read:
        usage: "COUNTER"
        description: "Number of disk reads"
    - cache_hit_ratio:
        usage: "GAUGE"
        description: "Cache hit ratio (0-1)"

# Replication lag (if applicable)
pg_replication_lag:
  query: |
    SELECT
      application_name,
      client_addr,
      state,
      COALESCE(EXTRACT(EPOCH FROM (NOW() - replay_lag)), 0) AS replay_lag_seconds,
      COALESCE(EXTRACT(EPOCH FROM (NOW() - write_lag)), 0) AS write_lag_seconds
    FROM pg_stat_replication
  master: true
  metrics:
    - application_name:
        usage: "LABEL"
        description: "Application name"
    - client_addr:
        usage: "LABEL"
        description: "Client IP address"
    - state:
        usage: "LABEL"
        description: "Replication state"
    - replay_lag_seconds:
        usage: "GAUGE"
        description: "Replay lag in seconds"
    - write_lag_seconds:
        usage: "GAUGE"
        description: "Write lag in seconds"

# Deadlocks
pg_deadlocks:
  query: |
    SELECT
      datname,
      deadlocks
    FROM pg_stat_database
    WHERE datname = 'cepcomunicacion'
  master: true
  metrics:
    - datname:
        usage: "LABEL"
        description: "Database name"
    - deadlocks:
        usage: "COUNTER"
        description: "Number of deadlocks detected"

# Business metrics - Leads count
pg_business_leads_count:
  query: |
    SELECT
      COUNT(*) AS total_leads,
      COUNT(*) FILTER (WHERE created_at > NOW() - INTERVAL '1 hour') AS leads_last_hour,
      COUNT(*) FILTER (WHERE created_at > NOW() - INTERVAL '24 hours') AS leads_last_24h,
      COUNT(*) FILTER (WHERE status = 'new') AS leads_new,
      COUNT(*) FILTER (WHERE status = 'contacted') AS leads_contacted,
      COUNT(*) FILTER (WHERE status = 'enrolled') AS leads_enrolled
    FROM leads
  master: true
  metrics:
    - total_leads:
        usage: "GAUGE"
        description: "Total number of leads"
    - leads_last_hour:
        usage: "GAUGE"
        description: "Leads created in last hour"
    - leads_last_24h:
        usage: "GAUGE"
        description: "Leads created in last 24 hours"
    - leads_new:
        usage: "GAUGE"
        description: "Leads with status 'new'"
    - leads_contacted:
        usage: "GAUGE"
        description: "Leads with status 'contacted'"
    - leads_enrolled:
        usage: "GAUGE"
        description: "Leads with status 'enrolled'"

# Business metrics - Courses count
pg_business_courses_count:
  query: |
    SELECT
      COUNT(*) AS total_courses,
      COUNT(*) FILTER (WHERE status = 'published') AS courses_published,
      COUNT(*) FILTER (WHERE status = 'draft') AS courses_draft
    FROM courses
  master: true
  metrics:
    - total_courses:
        usage: "GAUGE"
        description: "Total number of courses"
    - courses_published:
        usage: "GAUGE"
        description: "Published courses"
    - courses_draft:
        usage: "GAUGE"
        description: "Draft courses"
